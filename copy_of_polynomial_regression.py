# -*- coding: utf-8 -*-
"""Copy of polynomial_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i8rWDTNQgAS31rl_PhKALTTkYfw3ViL-

# Polynomial Regression
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset = pd.read_csv('polynomial regression.csv')
X = dataset.iloc[:, -1].values.reshape(-1, 1)
y = dataset.iloc[:, -2].values
z = dataset.iloc[:, 0:4].values
from sklearn.impute import SimpleImputer

imputer = SimpleImputer(missing_values=np.nan, strategy="most_frequent")
imputer.fit(z[:, 2:4])
z[:, 2:4] = imputer.transform(z[:, 2:4])
imputer1 = SimpleImputer(missing_values=np.nan, strategy="mean")
imputer1.fit(z[:, 0:2])
z[:, 0:2] = imputer.transform(z[:, 0:2])

y = y.reshape(-1, 1)
imputer2 = SimpleImputer(missing_values=np.nan, strategy="mean")
y = imputer2.fit_transform(y).ravel()


from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X, y)

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 8)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

plt.scatter(X, y, color = 'red')
plt.plot(X, regressor.predict(X), color = 'blue')
plt.title('Truth or Bluff (Linear Regression)')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

plt.scatter(X, y, color = 'red')
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')
plt.title('Truth or Bluff (Polynomial Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

regressor.predict([[10.2]])
lin_reg_2.predict(poly_reg.fit_transform([[10.2]]))